{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Post from '../components/post';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar CONTENTFUL_SPACE_ID = publicRuntimeConfig.CONTENTFUL_SPACE_ID,\n    CONTENTFUL_ACCESS_TOKEN = publicRuntimeConfig.CONTENTFUL_ACCESS_TOKEN;\n\nvar client = require('contentful').createClient({\n  space: CONTENTFUL_SPACE_ID,\n  accessToken: CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  function fetchEntries() {\n    var entries;\n    return _regeneratorRuntime.async(function fetchEntries$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.getEntries());\n\n          case 2:\n            entries = _context.sent;\n\n            if (!entries.items) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", entries.items);\n\n          case 5:\n            console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    function getPosts() {\n      var allPosts;\n      return _regeneratorRuntime.async(function getPosts$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetchEntries());\n\n            case 2:\n              allPosts = _context2.sent;\n              setPosts(_toConsumableArray(allPosts));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n\n    getPosts();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Next.js + Contentful\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://css.zeit.sh/v1.css\",\n    type: \"text/css\"\n  })), posts.length > 0 ? posts.map(function (p) {\n    return __jsx(Post, {\n      alt: p.fields.alt,\n      date: p.fields.date,\n      key: p.fields.title,\n      image: p.fields.image,\n      title: p.fields.title,\n      url: p.fields.url\n    });\n  }) : null);\n}\n\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}